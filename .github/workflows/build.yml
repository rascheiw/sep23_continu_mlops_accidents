name: CICD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches:
      - main
      - Raph
  pull_request:
    branches:
      - main
      - Raph

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" job
  build-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          build-args: |
            username_env=${{ secrets.ENV_USERNAME }}
            password_env: ${{ secrets.ENV_PASSWORD }}
          context: ./reports
          file: ./reports/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: rascheiw/streamlit_accidents:latest
          cache-from: type=registry,ref=rascheiw/streamlit_accidents:latest
          cache-to: type=inline

      - name: Deploy Image
        run: echo ${{ steps.docker_build.outputs.digest }}

  # The "deploy" job
  deploy:
    runs-on: ubuntu-latest
    needs: [build-docker]
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push'}} # Only run this workflow if it is main branch on push event
    steps:
      - uses: actions/checkout@v2

      # Deploy to server
      - name: multiple command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker stop go-container || true && docker rmi rascheiw/streamlit_accidents
            docker pull rascheiw/streamlit_accidents:latest
            docker run -d --rm --name go-container -p 8081:8081 rascheiw/streamlit_accidents
      # Send slack alert after done pipeline
      - name: Send slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.